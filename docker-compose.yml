services:
  mongo-express:
    image: mongo-express
    container_name: mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: mongodb://admin:password@mongo:27017/
      ME_CONFIG_BASICAUTH: false

  mongo-proton:
    image: mongo:latest
    container_name: proton_mongo
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: protondb
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_proton_data:/data/db

  proton:
    build:
      context: ./src/protondb-community-api
    container_name: proton
    depends_on:
      - mongo-proton
    environment:
      MONGO_URL: mongodb://admin:password@mongo-proton:27017/protondb
    ports:
      - "3000:3000"

  spark-master:
    image: bitnami/spark:latest
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "7077:7077"
      - "8080:8080"

  spark-worker:
    image: bitnami/spark:latest
    container_name: spark-worker
    ports:
      - "4000:8081"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=2G
      - SPARK_WORKER_CORES=2
    volumes:
      - ./data:/data  # Mount for reading/writing delta tables
    depends_on:
      - spark-master

  twitch-writer:
    build:
      context: ./src/Twitch
    container_name: twitch-writer
    depends_on:
      - spark-master
      - spark-worker
    volumes:
      - ./data:/data
    environment:
      - TWITCH_FETCH_INTERVAL=300  # or any other env vars you use
    command: ["python", "TwitchDataLoader.py"]

volumes:
  mongo_proton_data: {}
